{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Program0907\\\\OneDrive\\\\Desktop\\\\Coding Dojo\\\\MernStack\\\\React\\\\1. Introduction\\\\ytTodo\\\\react-todo-app-v1-yt\\\\src\\\\components\\\\TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      res.status(400);\n      throw new Error('Please add a text field');\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n    console.log(...todos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => item.id === todoId ? newValue : item));\n  };\n\n  const removeTodo = id => {\n    const removedArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removedArr);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"What's the Plan for Today?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      todos: todos,\n      completeTodo: completeTodo,\n      removeTodo: removeTodo,\n      updateTodo: updateTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TodoList, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","TodoForm","Todo","TodoList","todos","setTodos","addTodo","todo","text","test","res","status","Error","newTodos","console","log","updateTodo","todoId","newValue","prev","map","item","id","removeTodo","removedArr","filter","completeTodo","updatedTodos","isComplete"],"sources":["C:/Users/Program0907/OneDrive/Desktop/Coding Dojo/MernStack/React/1. Introduction/ytTodo/react-todo-app-v1-yt/src/components/TodoList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n\nconst addTodo = todo => {\n  if (!todo.text || /^\\s*$/.test(todo.text)) {\n              res.status(400)\n              throw new Error('Please add a text field')\n\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n\n    setTodos(newTodos);\n    console.log(...todos);\n  };\n\nconst updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n  };\n\nconst removeTodo = id => {\n    const removedArr = [...todos].filter(todo => todo.id !== id);\n\n    setTodos(removedArr);\n  };\n\nconst completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n};\n\n\n  return (\n    <>\n      <h1>What's the Plan for Today?</h1>\n      <TodoForm onSubmit={addTodo} />\n      <Todo\n        todos={todos}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n        updateTodo={updateTodo}\n      />\n    </>\n  );\n}\nexport default TodoList;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;;AAEA,SAASC,QAAT,GAAoB;EAAA;;EAClB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;EAEF,MAAMM,OAAO,GAAGC,IAAI,IAAI;IACtB,IAAI,CAACA,IAAI,CAACC,IAAN,IAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAlB,EAA2C;MAC/BE,GAAG,CAACC,MAAJ,CAAW,GAAX;MACA,MAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;MAER;IACD;;IAED,MAAMC,QAAQ,GAAG,CAACN,IAAD,EAAO,GAAGH,KAAV,CAAjB;IAEAC,QAAQ,CAACQ,QAAD,CAAR;IACAC,OAAO,CAACC,GAAR,CAAY,GAAGX,KAAf;EACD,CAZH;;EAcA,MAAMY,UAAU,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;IACrC,IAAI,CAACA,QAAQ,CAACV,IAAV,IAAkB,QAAQC,IAAR,CAAaS,QAAQ,CAACV,IAAtB,CAAtB,EAAmD;MACjD;IACD;;IAEDH,QAAQ,CAACc,IAAI,IAAIA,IAAI,CAACC,GAAL,CAASC,IAAI,IAAKA,IAAI,CAACC,EAAL,KAAYL,MAAZ,GAAqBC,QAArB,GAAgCG,IAAlD,CAAT,CAAR;EACD,CANH;;EAQA,MAAME,UAAU,GAAGD,EAAE,IAAI;IACrB,MAAME,UAAU,GAAG,CAAC,GAAGpB,KAAJ,EAAWqB,MAAX,CAAkBlB,IAAI,IAAIA,IAAI,CAACe,EAAL,KAAYA,EAAtC,CAAnB;IAEAjB,QAAQ,CAACmB,UAAD,CAAR;EACD,CAJH;;EAMA,MAAME,YAAY,GAAGJ,EAAE,IAAI;IACvB,IAAIK,YAAY,GAAGvB,KAAK,CAACgB,GAAN,CAAUb,IAAI,IAAI;MACnC,IAAIA,IAAI,CAACe,EAAL,KAAYA,EAAhB,EAAoB;QAClBf,IAAI,CAACqB,UAAL,GAAkB,CAACrB,IAAI,CAACqB,UAAxB;MACD;;MACD,OAAOrB,IAAP;IACD,CALkB,CAAnB;IAMAF,QAAQ,CAACsB,YAAD,CAAR;EACH,CARD;;EAWE,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,QAAD;MAAU,QAAQ,EAAErB;IAApB;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,IAAD;MACE,KAAK,EAAEF,KADT;MAEE,YAAY,EAAEsB,YAFhB;MAGE,UAAU,EAAEH,UAHd;MAIE,UAAU,EAAEP;IAJd;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA,gBADF;AAYD;;GAtDQb,Q;;KAAAA,Q;AAuDT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}